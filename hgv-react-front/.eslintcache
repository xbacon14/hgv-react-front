[{"C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\index.js":"1","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\App.jsx":"2","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\routes.jsx":"3","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\services\\PrivateRoute.js":"4","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\services\\firebase.js":"5","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\context\\AuthContext.js":"6","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Registros\\index.jsx":"7","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Inicio\\index.jsx":"8","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Account\\index.jsx":"9","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Login\\signIn\\index.jsx":"10","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Login\\signUp\\index.jsx":"11","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Registros\\components\\registroForm.jsx":"12","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\CrearEmpresa\\index.jsx":"13","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Reportes\\index.jsx":"14","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\components\\footer\\index.jsx":"15","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Account\\components\\accountForm.jsx":"16","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\components\\footer\\clock\\index.jsx":"17"},{"size":474,"mtime":1614957773668,"results":"18","hashOfConfig":"19"},{"size":384,"mtime":1614957773610,"results":"20","hashOfConfig":"19"},{"size":4186,"mtime":1614957773682,"results":"21","hashOfConfig":"19"},{"size":536,"mtime":1615250356175,"results":"22","hashOfConfig":"19"},{"size":1377,"mtime":1614957773683,"results":"23","hashOfConfig":"19"},{"size":2132,"mtime":1614957773668,"results":"24","hashOfConfig":"19"},{"size":2505,"mtime":1615250869599,"results":"25","hashOfConfig":"19"},{"size":4441,"mtime":1615246742015,"results":"26","hashOfConfig":"19"},{"size":2539,"mtime":1615251013952,"results":"27","hashOfConfig":"19"},{"size":3598,"mtime":1615245983069,"results":"28","hashOfConfig":"19"},{"size":5522,"mtime":1614957773671,"results":"29","hashOfConfig":"19"},{"size":6867,"mtime":1614957773672,"results":"30","hashOfConfig":"19"},{"size":3592,"mtime":1614957773670,"results":"31","hashOfConfig":"19"},{"size":4192,"mtime":1614957773673,"results":"32","hashOfConfig":"19"},{"size":584,"mtime":1614957773667,"results":"33","hashOfConfig":"19"},{"size":4629,"mtime":1615249760706,"results":"34","hashOfConfig":"19"},{"size":708,"mtime":1614957773667,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1elfj8c",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\index.js",[],["76","77"],"C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\App.jsx",[],"C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\routes.jsx",["78"],"import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport { logout, auth } from \"./services/firebase\";\r\nimport { AuthProvider, AuthContext } from './context/AuthContext';\r\nimport PrivateRoute from './services/PrivateRoute';\r\nimport logo from './assets/login/logo-login.png';\r\n\r\nimport SignIn from './pages/Login/signIn/index';\r\nimport SignUp from './pages/Login/signUp/index';\r\nimport Inicio from './pages/Inicio/index';\r\nimport Registro from './pages/Registros/index';\r\nimport Account from './pages/Account/index';\r\nimport CrearEmpresa from './pages/CrearEmpresa';\r\nimport Reportes from './pages/Reportes';\r\nimport Footer from './components/footer';\r\n\r\n\r\nconst Routes = () => {\r\n\r\n    // const history = useHistory();\r\n    const [currentUser, setCurrentUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(setCurrentUser);\r\n    }, [])\r\n\r\n    const handleLogout = () => {\r\n        try {\r\n            console.log(\"buscando\")\r\n            logout();\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            console.log(\"finally\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AuthProvider>\r\n            <Router>\r\n                <div className=\"container\">\r\n                    {!currentUser ? <div></div> :\r\n                        <div className=\"navegator\">\r\n                            <nav className=\"navbar nav-bar navbar-expand-lg navbar-light bg-light col-10 \" id=\"navbarSupportedContent\">\r\n                                <img src={logo} alt=\"Logo verde\" id=\"logoverde\" />\r\n                                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                    <span className=\"navbar-toggler-icon\"></span>\r\n                                </button>\r\n                                <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\r\n                                    <Link to=\"/\" className=\"btn btn-header\" >\r\n                                        Inicio\r\n                                    </Link>\r\n                                    <Link to=\"/registro\" className=\"btn btn-header\" >\r\n                                        Registro de Personas\r\n                                     </Link>\r\n                                    <Link to=\"/account\" className=\"btn btn-header\">\r\n                                        Mi Cuenta\r\n                                     </Link>\r\n                                    <Link to=\"/reportes\" className=\"btn btn-header\" >\r\n                                        Reportes\r\n                                     </Link>\r\n                                    <Link to=\"\" className=\"btn-header btn btn-danger\"\r\n                                        id=\"logout\"\r\n                                        onClick={handleLogout}\r\n                                    >\r\n                                        LOGOUT\r\n                                     </Link>\r\n                                </div>\r\n                            </nav>\r\n                        </div>}\r\n                    <Switch>\r\n                        <PrivateRoute path=\"/\" exact component={Inicio} />\r\n                        <PrivateRoute path=\"/account\" component={Account} />\r\n                        <PrivateRoute path=\"/crear\" component={CrearEmpresa} />\r\n                        <PrivateRoute path=\"/registro\" component={Registro} />\r\n                        <PrivateRoute path=\"/reportes\" component={Reportes} />\r\n                        <Route path=\"/signIn\" exact component={SignIn} />\r\n                        <Route path=\"/signUp\" exact component={SignUp} />\r\n                        {/* <Route path=\"/error404\" component={Error404} /> */}\r\n\r\n\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n\r\n            {!currentUser ? <div></div> : <Footer />}\r\n\r\n        </AuthProvider>\r\n    );\r\n    // } else { return (<SignIn />) }\r\n}\r\n\r\nexport default Routes;","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\services\\PrivateRoute.js",[],"C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\services\\firebase.js",[],"C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\context\\AuthContext.js",[],"C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Registros\\index.jsx",["79"],"import React, { useEffect, useState } from 'react'\r\nimport RegistroForm from './components/registroForm.jsx'\r\nimport { timestamp, db } from '../../services/firebase'\r\n\r\n// import '../CrearEmpresa/style.css';\r\n// import { Link } from 'react-router-dom';\r\n\r\nconst Registro = () => {\r\n  const [data, setData] = useState([])\r\n  const [user] = useState(localStorage.getItem('fbase_key'))\r\n\r\n  const addOrEditLink = async (linkObject) => {\r\n    console.log(user)\r\n    await db\r\n      .collection('personas')\r\n      .doc()\r\n      .set({ linkObject, createdAt: timestamp, user })\r\n    console.log('Registro guardado :)')\r\n    loadRegistroGetDocs()\r\n  }\r\n\r\n  const loadRegistroGetDocs = async () => {\r\n    var lista = []\r\n    var count = 1\r\n\r\n    await db\r\n      .collection('personas')\r\n      .orderBy('createdAt', 'desc')\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.docs.forEach((doc) => {\r\n          var datos = doc.data()\r\n          var usuario = datos.user\r\n          if (usuario === user) {\r\n            console.log('si es')\r\n            var objeto = datos.linkObject\r\n            var fecha = datos.createdAt.toDate()\r\n            var fechitalo = new Intl.DateTimeFormat('es-PY', {\r\n              year: 'numeric',\r\n              month: '2-digit',\r\n              day: '2-digit',\r\n              hour: '2-digit',\r\n              minute: '2-digit',\r\n              second: '2-digit',\r\n            }).format(fecha)\r\n            lista.push({ ...objeto, count, fechitalo, user })\r\n            console.log(lista)\r\n            console.log(objeto)\r\n            count++\r\n          }\r\n        })\r\n        setData(lista)\r\n        // console.log(lista);\r\n        // console.log(count);\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    try {\r\n      loadRegistroGetDocs()\r\n    }catch{\r\n        \r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"row col-10\">\r\n      <RegistroForm addOrEditLink={addOrEditLink} />\r\n\r\n      <div className=\"col-5 container-1\">\r\n        {data.map((data) => {\r\n          return (\r\n            <div key={data.count} className=\"card\">\r\n              <div className=\"card-body\">\r\n                <span className=\"card-title card-letter title-title\">\r\n                  {' '}\r\n                  {data.nombre}{' '}\r\n                </span>\r\n                <p className=\"card-text card-letter\">{data.fechitalo} Hs.</p>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Registro\r\n","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Inicio\\index.jsx",["80"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { db, timestamp } from '../../services/firebase';\r\n\r\nimport ok from '../../assets/home/ok.svg';\r\nimport add from '../../assets/home/add.svg';\r\n\r\nconst Home = () => {\r\n\r\n  useEffect(() => {\r\n    loadRegistros();\r\n  }, [])\r\n\r\n  const history = useHistory();\r\n\r\n  const [error, setError] = useState(null);\r\n  const [registro, setRegistro] = useState({});\r\n  const [data, setData] = useState({});\r\n  const [values, setValues] = useState({});\r\n  // const [user, setUser] = useState(null);\r\n\r\n\r\n\r\n  const loadRegistros = async () => {\r\n    var lista = [];\r\n    var count = 1;\r\n\r\n    await db.collection('registros').orderBy(\"createdAt\", \"desc\").get().then(\r\n      (snapshot) => {\r\n        snapshot.docs.forEach(\r\n          doc => {\r\n            var datos = doc.data();\r\n            var objeto = datos.registro[0];\r\n            var fecha = datos.createdAt.toDate();\r\n            var fechitalo = new Intl.DateTimeFormat('es-PY', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(fecha);\r\n            lista.push({ ...objeto, count, fechitalo });\r\n            count++;\r\n\r\n          }\r\n        );\r\n        setData(lista)\r\n\r\n\r\n      }\r\n    ).catch((err => setError(err)))\r\n  }\r\n\r\n  const handleInput = (e) => {\r\n    setValues(e.target.value);\r\n  }\r\n\r\n  const consultarCi = async (e) => {\r\n    e.preventDefault();\r\n    const ci = values;\r\n    var lista = [];\r\n    var count = 1;\r\n\r\n    await db.collection('personas').where(\"linkObject.ci\", \"==\", ci).get().then(\r\n      (snapshot) => {\r\n        if (!snapshot.empty) {\r\n          snapshot.forEach(doc => {\r\n            var datos = doc.data();\r\n            var objeto = datos.linkObject;\r\n            var fecha = datos.createdAt.toDate();\r\n            var fechitalo = new Intl.DateTimeFormat('es-PY', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(fecha);\r\n            console.log(objeto);\r\n            lista.push({ ...objeto, count, fechitalo });\r\n          });\r\n          count++;\r\n          setRegistro(lista);\r\n\r\n        }\r\n        if (snapshot.empty) {\r\n          console.log(\"error\")\r\n          setError(\"Persona no encontrada\");\r\n          setTimeout(() => setError(''), 4000);\r\n        }\r\n      })\r\n    registrar()\r\n  }\r\n\r\n  const registrar = async () => {\r\n    if (registro) {\r\n      console.log(registro)\r\n      await db.collection('registros').add({ registro, createdAt: timestamp });\r\n      loadRegistros();\r\n      resetStates();\r\n    }\r\n  }\r\n\r\n  const resetStates = () => {\r\n    setRegistro(null);\r\n    setValues(null)\r\n  }\r\n\r\n  const crearPersona = () => {\r\n    // history.push('/registro')\r\n    history.push({\r\n      pathname: \"/registro\",\r\n    })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"registro-container\" >\r\n      <div className=\"registro-form col-6\">\r\n        <form>\r\n          <label htmlFor=\"ci\" className=\"label-home title-title\">Consulte por Numero de CI *</label>\r\n          <div\r\n           className=\" row-home \"\r\n           >\r\n            <input id=\"ci-home\"\r\n              required\r\n              className=\"col-6\"\r\n              type=\"number\"\r\n              name=\"ci\"\r\n              // autoComplete=\"off\"\r\n              onChange={handleInput}\r\n              // value={(e) => setCi(e.target.value)}\r\n              placeholder=\"Ingrese su ci\" />\r\n            <button className=\"btn btn-success \" onClick={consultarCi} id=\"consultar\"> <img src={ok} className=\"svg\" alt=\"Registrar\" />  Registrar </button>\r\n            <button className=\"btn btn-primary \" onClick={crearPersona} id=\"crear\"> <img src={add} className=\"svg\" alt=\"Crear\" /> Crear </button>\r\n          </div>\r\n        </form>\r\n        {error && <p className=\"error\">{error}</p>}\r\n      </div>\r\n\r\n\r\n      <div className=\"ult-registros col-4\">\r\n        {/* {\r\n          data.map((data) => {\r\n            return (\r\n              <div key={data.count} className=\"card\" >\r\n                <div className=\"card-body\" >\r\n                  <span className=\"card-title\" > {data.nombre} </span>\r\n                  <p className=\"card-text\" >\r\n                    {data.fechitalo} Hs.\r\n                                                </p>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        } */}\r\n      </div>\r\n    </div>)\r\n}\r\n\r\nexport default Home;","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Account\\index.jsx",["81"],"import React, { useEffect, useState } from 'react'\r\nimport AccountForm from './components/accountForm'\r\nimport { db, timestamp } from '../../services/firebase'\r\n\r\nconst Account = () => {\r\n  const [data, setData] = useState([])\r\n  const [user] = useState(localStorage.getItem('fbase_key'))\r\n  const addOrEditLink = async (linkObject) => {\r\n    await db\r\n      .collection('account')\r\n      .doc()\r\n      .set({ linkObject, createdAt: timestamp, user })\r\n    console.log('Registro guardado :)')\r\n    loadEmpresaGetDocs()\r\n  }\r\n\r\n  const loadEmpresaGetDocs = async () => {\r\n    var lista = []\r\n    var count = 1\r\n\r\n    await db\r\n      .collection('account')\r\n      .orderBy('createdAt', 'desc')\r\n      .limit(4)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.docs.forEach((doc) => {\r\n          var datos = doc.data()\r\n          var usuario = datos.user\r\n          if (usuario === user) {\r\n            var objeto = datos.linkObject\r\n            var fecha = datos.createdAt.toDate()\r\n            var fechitalo = new Intl.DateTimeFormat('es-PY', {\r\n              year: 'numeric',\r\n              month: '2-digit',\r\n              day: '2-digit',\r\n              hour: '2-digit',\r\n              minute: '2-digit',\r\n              second: '2-digit',\r\n            }).format(fecha)\r\n            lista.push({ ...objeto, count, fechitalo, user })\r\n            count++\r\n          }\r\n        })\r\n        setData(lista)\r\n        console.log(lista)\r\n        // console.log(count);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    try {\r\n      loadEmpresaGetDocs()\r\n    } catch {\r\n        \r\n    }\r\n  }, [])\r\n  // const getAccounts = async () => {\r\n  //     const querySnapShot = await db.collection('account').get();\r\n  //     querySnapShot.forEach(doc => {\r\n  //         console.log(doc.data())\r\n  //     })\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //     getAccounts();\r\n  // })\r\n\r\n  return (\r\n    <div className=\"row row-registro col-10\">\r\n      <AccountForm addOrEditLink={addOrEditLink} />\r\n      <div className=\"col-5 container-1 \">\r\n        {data.map((data) => {\r\n          return (\r\n            <div key={data.count} className=\"card\">\r\n              <div className=\"card-body\">\r\n                <span className=\"card-title card-letter title-title\">\r\n                  {' '}\r\n                  {data.razonSocial}{' '}\r\n                </span>\r\n                <p className=\"card-text card-letter\">{data.fechitalo} Hs.</p>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Account\r\n","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Login\\signIn\\index.jsx",[],"C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Login\\signUp\\index.jsx",["82","83","84","85","86","87","88"],"import React, { useState } from \"react\";\r\nimport { auth } from '../../../services/firebase';\r\n\r\nimport logo from '../../../assets/login/logo-login.png';\r\nimport Spinner from '../../../assets/cargando/rolling.svg'\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const createUserWithEmailAndPasswordHandler = (event, email, password) => {\r\n    event.preventDefault();\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setDisplayName(\"\");\r\n  }\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === \"userEmail\") {\r\n      setEmail(value);\r\n    } else if (name === \"userPassword\") {\r\n      setPassword(value);\r\n    } else if (name === \"displayName\") {\r\n      setDisplayName(value);\r\n    }\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true)\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"col-4 card-login\">\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <div className=\"card-body align-content-center\">\r\n        <center>\r\n          <div className=\"logo\">\r\n            <img src={logo} alt=\"HGV\" />\r\n          </div>\r\n        </center>\r\n        <center>\r\n          <div>\r\n            {error && <p className='error'>{error}</p>}\r\n            <h1 className=\"title-display title-login \">Crear cuenta</h1>\r\n          </div>\r\n        </center>\r\n        <form onSubmit={handleSubmit}>\r\n          <center>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"emailLabel\" className=\"text-headline\">Nombre del Usuario</label>\r\n              <input type=\"email\" className=\"form-control\" id=\"emailInput\" placeholder=\"Ingrese su Correo\" aria-describedby=\"emailHelp\" onChange={(e) => setEmail(e.target.value)} />\r\n              <label htmlFor=\"emailLabel\" className=\"text-headline\">Correo del Usuario</label>\r\n              <input type=\"email\" className=\"form-control\" id=\"emailInput\" placeholder=\"Ingrese su Correo\" aria-describedby=\"emailHelp\" onChange={(e) => setEmail(e.target.value)} />\r\n              <label htmlFor=\"passLabel\" className=\"text-headline\">Contraseña</label>\r\n              <input type=\"password\" className=\"form-control\" id=\"passInput\" placeholder=\"Ingrese su Contraseña\" onChange={(e) => setPassword(e.target.value)} />\r\n              <label htmlFor=\"confPassLabel\" className=\"text-headline\">Repita su Contraseña</label>\r\n              <input type=\"password\" className=\"form-control\" id=\"confPassInput\" placeholder=\"Ingrese su Contraseña\" onChange={(e) => setPassword(e.target.value)} />\r\n            </div>\r\n          </center>\r\n          <center>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-lg\">Crear</button>\r\n\r\n          </center>\r\n        </form>\r\n        {loading && <img src={Spinner} alt=\"Cargando\" />}\r\n\r\n      </div>\r\n    </div>\r\n    // <div className=\"mt-8\">\r\n    //   <h1 className=\"text-3xl mb-2 text-center font-bold\">Sign Up</h1>\r\n    //   <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n    //     {error !== null && (\r\n    //       <div className=\"py-4 bg-red-600 w-full text-white text-center mb-3\">\r\n    //         {error}\r\n    //       </div>\r\n    //     )}\r\n    //     <form className=\"\">\r\n    //       <label htmlFor=\"displayName\" className=\"block\">\r\n    //         Display Name:\r\n    //       </label>\r\n    //       <input\r\n    //         type=\"text\"\r\n    //         className=\"my-1 p-1 w-full \"\r\n    //         name=\"displayName\"\r\n    //         value={displayName}\r\n    //         placeholder=\"E.g: Faruq\"\r\n    //         id=\"displayName\"\r\n    //         onChange={event => onChangeHandler(event)}\r\n    //       />\r\n    //       <label htmlFor=\"userEmail\" className=\"block\">\r\n    //         Email:\r\n    //       </label>\r\n    //       <input\r\n    //         type=\"email\"\r\n    //         className=\"my-1 p-1 w-full\"\r\n    //         name=\"userEmail\"\r\n    //         value={email}\r\n    //         placeholder=\"E.g: faruq123@gmail.com\"\r\n    //         id=\"userEmail\"\r\n    //         onChange={event => onChangeHandler(event)}\r\n    //       />\r\n    //       <label htmlFor=\"userPassword\" className=\"block\">\r\n    //         Password:\r\n    //       </label>\r\n    //       <input\r\n    //         type=\"password\"\r\n    //         className=\"mt-1 mb-3 p-1 w-full\"\r\n    //         name=\"userPassword\"\r\n    //         value={password}\r\n    //         placeholder=\"Your Password\"\r\n    //         id=\"userPassword\"\r\n    //         onChange={event => onChangeHandler(event)}\r\n    //       />\r\n    //       <button\r\n    //         className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\"\r\n    //         onClick={event => {\r\n    //           createUserWithEmailAndPasswordHandler(event, email, password);\r\n    //         }}\r\n    //       >\r\n    //         Sign up\r\n    //       </button>\r\n    //     </form>\r\n    //     <p className=\"text-center my-3\">or</p>\r\n    //     <button\r\n    //       className=\"bg-red-500 hover:bg-red-600 w-full py-2 text-white\"\r\n    //     >\r\n    //       Sign In with Google\r\n    //     </button>\r\n    //     <p className=\"text-center my-3\">\r\n    //       Already have an account?{\" \"}\r\n    //       <Link to=\"/\" className=\"text-blue-500 hover:text-blue-600\">\r\n    //         Sign in here\r\n    //       </Link>\r\n    //     </p>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\nexport default SignUp;","C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Registros\\components\\registroForm.jsx",[],"C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\CrearEmpresa\\index.jsx",[],"C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Reportes\\index.jsx",[],"C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\components\\footer\\index.jsx",[],"C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\pages\\Account\\components\\accountForm.jsx",[],"C:\\Users\\Porou\\Documents\\GitHub\\hgv-react-front\\hgv-react-front\\src\\components\\footer\\clock\\index.jsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":4,"column":24,"nodeType":"95","messageId":"96","endLine":4,"endColumn":35},{"ruleId":"97","severity":1,"message":"98","line":65,"column":6,"nodeType":"99","endLine":65,"endColumn":8,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"101","line":18,"column":10,"nodeType":"95","messageId":"96","endLine":18,"endColumn":14},{"ruleId":"97","severity":1,"message":"102","line":57,"column":6,"nodeType":"99","endLine":57,"endColumn":8,"suggestions":"103"},{"ruleId":"93","severity":1,"message":"104","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"105","line":8,"column":10,"nodeType":"95","messageId":"96","endLine":8,"endColumn":15},{"ruleId":"93","severity":1,"message":"106","line":9,"column":10,"nodeType":"95","messageId":"96","endLine":9,"endColumn":18},{"ruleId":"93","severity":1,"message":"107","line":10,"column":10,"nodeType":"95","messageId":"96","endLine":10,"endColumn":21},{"ruleId":"93","severity":1,"message":"108","line":11,"column":17,"nodeType":"95","messageId":"96","endLine":11,"endColumn":25},{"ruleId":"93","severity":1,"message":"109","line":15,"column":9,"nodeType":"95","messageId":"96","endLine":15,"endColumn":46},{"ruleId":"93","severity":1,"message":"110","line":21,"column":9,"nodeType":"95","messageId":"96","endLine":21,"endColumn":24},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'AuthContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadRegistroGetDocs'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadEmpresaGetDocs'. Either include it or remove the dependency array.",["114"],"'auth' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'displayName' is assigned a value but never used.","'setError' is assigned a value but never used.","'createUserWithEmailAndPasswordHandler' is assigned a value but never used.","'onChangeHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [loadRegistroGetDocs]",{"range":"119","text":"120"},"Update the dependencies array to be: [loadEmpresaGetDocs]",{"range":"121","text":"122"},[1839,1841],"[loadRegistroGetDocs]",[1590,1592],"[loadEmpresaGetDocs]"]